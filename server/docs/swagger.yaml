basePath: /api/v1
definitions:
  model.Task:
    properties:
      createdAt:
        type: string
      id:
        type: string
      status:
        $ref: '#/definitions/model.TaskStatus'
      title:
        type: string
      updatedAt:
        type: string
    type: object
  model.TaskStatus:
    enum:
    - 1
    - 2
    - 3
    - 4
    type: integer
    x-enum-varnames:
    - TaskStatusToDo
    - TaskStatusInProgress
    - TaskStatusDone
    - TaskStatusDeleted
  model.TaskToCreate:
    properties:
      status:
        $ref: '#/definitions/model.TaskStatus'
      title:
        type: string
    type: object
  model.TaskToUpdate:
    properties:
      id:
        type: string
      status:
        $ref: '#/definitions/model.TaskStatus'
      title:
        type: string
    type: object
  model.UserLoginData:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server with To-Do List API.
  title: To-Do List API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Выполняет вход в систему для пользователя с переданными данными
        в запросе
      parameters:
      - description: Email и пароль для пользователя
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/model.UserLoginData'
      produces:
      - application/json
      responses:
        "200":
          description: Успешный вход в систему
          schema:
            type: string
        "400":
          description: Невалидный JSON в теле запроса
          schema:
            type: string
        "401":
          description: Неверный пароль
          schema:
            type: string
        "404":
          description: Пользователь не найден
          schema:
            type: string
        "500":
          description: Ошибка при создании пользователя
          schema:
            type: string
      summary: Вход пользователя
      tags:
      - login
  /register:
    post:
      consumes:
      - application/json
      description: Регистрирует нового пользователя с переданными данными в запросе
      parameters:
      - description: Email и пароль для пользователя
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/model.UserLoginData'
      responses:
        "200":
          description: Пользователь успешно зарегистрирован
          schema:
            type: string
        "400":
          description: Невалидный JSON в теле запроса
          schema:
            type: string
        "409":
          description: Пользователь уже существует
          schema:
            type: string
        "500":
          description: Ошибка при создании пользователя
          schema:
            type: string
      summary: Регистрация нового пользователя
      tags:
      - register
  /tasks:
    get:
      description: Выводит список тасок. В запросе нужно передать Bearer Token
      produces:
      - application/json
      responses:
        "200":
          description: Список тасок
          schema:
            items:
              $ref: '#/definitions/model.Task'
            type: array
        "401":
          description: Необходимо выполнить вход для пользователя
          schema:
            type: string
        "500":
          description: Ошибка при создании пользователя
          schema:
            type: string
      security:
      - Bearer: []
      summary: Вывод списка тасок
      tags:
      - tasks
    post:
      consumes:
      - application/json
      description: Создает новую таску. В запросе нужно передать Bearer Token
      parameters:
      - description: Данные новой таски
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/model.TaskToCreate'
      produces:
      - application/json
      responses:
        "200":
          description: Успешное создание
          schema:
            type: string
        "400":
          description: Невалидный JSON в теле запроса
          schema:
            type: string
        "401":
          description: Необходимо выполнить вход для пользователя
          schema:
            type: string
        "500":
          description: Ошибка при создании пользователя
          schema:
            type: string
      security:
      - Bearer: []
      summary: Создание таски
      tags:
      - tasks
    put:
      consumes:
      - application/json
      description: Обновляет существующую таску. В запросе нужно передать Bearer Token
      parameters:
      - description: Данные существующей таски
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/model.TaskToUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: Успешное создание
          schema:
            type: string
        "400":
          description: Невалидный JSON в теле запроса
          schema:
            type: string
        "401":
          description: Необходимо выполнить вход для пользователя
          schema:
            type: string
        "500":
          description: Ошибка при создании пользователя
          schema:
            type: string
      security:
      - Bearer: []
      summary: Обновление таски
      tags:
      - tasks
securityDefinitions:
  Bearer:
    description: Bearer {YOUR_TOKEN}
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
