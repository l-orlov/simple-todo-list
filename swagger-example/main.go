// main.go

package main

import (
	"fmt"
	"log"
	"net/http"

	_ "example/docs" // docs is generated by Swag CLI, you have to import it.
	"github.com/gorilla/mux"
	httpSwagger "github.com/swaggo/http-swagger/v2"
)

// @title Swagger Example API
//
// @version 1.0
// @description This is a sample server Petstore server.
// @host localhost:8080
// @BasePath /
//
// @securityDefinitions.apiKey Bearer
// @in header
// @name Authorization
// @description Bearer {YOUR_TOKEN}
func main() {
	// Create a new router
	r := mux.NewRouter()

	// Serve the Swagger UI at /swagger
	r.PathPrefix("/swagger").Handler(httpSwagger.WrapHandler)

	r.HandleFunc("/", WelcomeHandler).Methods("GET")

	// Start the server
	log.Fatal(http.ListenAndServe(":8080", r))
}

// WelcomeHandler is the handler for the welcome endpoint.
// @Summary Welcome endpoint
// @Description This endpoint provides a short welcome message
// @Produce text/plain
// @Success 200 {string} string "welcome"
// @Failure 400 {string} string "bad request"
// @Failure 401 {string} string "unauthorized"
// @Failure 403 {string} string "forbidden"
// @Failure 404 {string} string "not found"
// @Failure 500 {string} string "internal server error"
// @Router / [get]
// @Security Bearer
func WelcomeHandler(w http.ResponseWriter, r *http.Request) {
	// Получение значения заголовка Authorization из запроса
	authHeader := r.Header.Get("Authorization")

	// Здесь вы можете использовать значение authHeader для выполнения необходимых действий,
	// например, аутентификации пользователя или выполнения проверок авторизации.

	// Пример ответа
	w.Write([]byte(fmt.Sprintf("Welcome! Authorization header: %s", authHeader)))
}
